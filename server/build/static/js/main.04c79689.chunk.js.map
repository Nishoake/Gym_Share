{"version":3,"sources":["components/TableData.js","queries.js","mutations.js","components/Marketplace.js","components/AvailableTable.js","components/ActiveTable.js","data/options.js","components/Equipment.js","components/TableHistory.js","components/BorrowingHistory.js","components/LendingHistory.js","components/Profile.js","App.js","index.js"],"names":["TableHistory","label","equipment","eventHandler","buttonLabel","className","map","e","key","id","category","weight","src","avatar_url","alt","onClick","ALL_OTHER_EQUIPMENT","gql","MY_EQUIPMENT","MY_BORROWING_HISTORY","MY_LENDING_HISTORY","MY_ACCOUNT","EQUIPMENT_COUNT","MY_HOLDS","MY_CHECKOUTS","PLACE_HOLD","ADD_EQUIPMENT","REMOVE_HOLD","CANCEL_MY_HOLD","CHECK_OUT","CHECK_IN","Marketplace","useState","available","setAvailable","green","useQuery","variables","type","yellow","red","useMutation","refetchQueries","query","addHold","placeHold","a","console","log","useEffect","data","allOtherEquipment","loading","error","AvailableTable","ActiveTable","primaryLabel","secondaryLabel","primaryFunction","secondaryFunction","primaryButtonLabel","secondaryButtonLabel","length","style","categoryOptions","value","weightOptions","Equipment","onHold","setOnHold","checkedOut","setCheckedOut","setCategory","setWeight","addEquipment","newEquipment","event","preventDefault","parseInt","cancelHold","holdRemove","checkOut","takeOut","checkIn","takeIn","transaction","myEquipment","onSubmit","onChange","options","TableData","transactions","columnLabel","check_out_timestamp","check_in_timestamp","BorrowingHistory","setTransactions","ledger","myBorrowingHistory","weightSet","Set","t","add","uniqueWeights","categorySet","uniqueCategories","lenderSet","name","uniqueLenders","shortLedger","filter","filterWeight","filterCategory","lender","filterLender","LendingHistory","myLendingHistory","Profile","info","setInfo","count","setCount","holds","setHolds","checkOuts","setCheckOuts","account","equipmentCount","myHolds","myCheckOuts","myAccount","number","email","house","street","city","profilePictureURL","App","to","activeStyle","fontWeight","color","class","exact","path","client","ApolloClient","cache","InMemoryCache","link","HttpLink","uri","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04c79689.chunk.js","sourcesContent":["import React from 'react'\n\nconst TableHistory = ({ label, equipment, eventHandler, buttonLabel }) => {\n  // if(equipment[0]) {\n  //   console.log(`Equipment Array = ${JSON.stringify(equipment)}`)\n  //   console.log(`1st ID = ${equipment[1].id}`)\n  // }\n  \n  return (\n    <div className=\"card\">\n      <h2>{label}</h2>\n      <table>\n        <tbody>\n          <tr>\n            <th>\n              Category\n            </th>\n            <th>\n              Weight\n            </th>\n            <th>\n              Owner\n            </th>\n            <th>\n              {buttonLabel}\n            </th>\n          </tr>\n          {equipment.map(e =>\n            <tr key={e.id}>\n              <td>{e.category}</td>\n              <td>{e.weight}</td>\n              <td><img src={e.avatar_url} alt=\"Gym Leader\" className=\"avatar\"/></td>\n              <td><button onClick={() => eventHandler(e.id)}>{buttonLabel}</button></td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default TableHistory","import { gql } from '@apollo/client'\n\nexport const ALL_OTHER_EQUIPMENT = gql`\n  query filterOtherEquipmentByType($type: String!){\n    allOtherEquipment(\n      type: $type\n    ) {\n      id,\n      category,\n      weight,\n      name,\n      number,\n      avatar_url\n    }\n  }\n`\n\nexport const MY_EQUIPMENT = gql`\n  query filterMyEquipmentByType($type: String!){\n    myEquipment(\n      type: $type\n    ) {\n      id,\n      category,\n      weight,\n      name,\n      number,\n      avatar_url\n    }\n  }\n`\n\nexport const MY_BORROWING_HISTORY = gql`\n  query{\n    myBorrowingHistory{\n      id,\n      category,\n      weight,\n      check_out_timestamp,\n      check_in_timestamp,\n      name,\n      number,\n      avatar_url\n    }\n  }\n`\n\nexport const MY_LENDING_HISTORY = gql`\n  query{\n    myLendingHistory{\n      id,\n      category,\n      weight,\n      check_out_timestamp,\n      check_in_timestamp,\n      name,\n      number,\n      avatar_url\n    }\n  }\n`\n\nexport const MY_ACCOUNT = gql`\n  query{\n    myAccount{\n      name,\n      number,\n      email,\n      house,\n      street,\n      city,\n      avatar_url\n    }\n  }\n`\n\nexport const EQUIPMENT_COUNT = gql`\n  query{\n    equipmentCount\n  }\n`\n\nexport const MY_HOLDS = gql`\n  query{\n    myHolds{\n      id,\n      category,\n      weight,\n      avatar_url\n    }\n  }\n`\n\nexport const MY_CHECKOUTS = gql`\n  query{\n    myCheckOuts{\n      id,\n      category,\n      weight,\n      avatar_url\n    }\n  }\n`","import { gql } from '@apollo/client'\n\nexport const PLACE_HOLD = gql`\n  mutation placeHold($id: String!){\n    placeHold(\n      id: $id\n    ) {\n      category\n      weight\n      id\n      transaction_id\n      hold_user_id\n    }\n  }\n`\n\nexport const ADD_EQUIPMENT = gql`\n  mutation addNewEquipment($category: String!, $weight: Int!){\n    addEquipment(\n      category: $category,\n      weight: $weight\n    ) {\n      category,\n      weight,\n      id,\n      user_id,\n      transaction_id,\n      hold_user_id\n    }\n  }\n`\n\nexport const REMOVE_HOLD = gql`\n  mutation removeHold($id: String!){\n    removeHold(\n      id: $id\n    ) {\n      category,\n      weight,\n      id,\n      user_id\n      transaction_id,\n      hold_user_id\n    }\n  }\n`\n\nexport const CANCEL_MY_HOLD = gql`\n  mutation cancelMyHold($id: String!){\n    cancelMyHold(\n      id: $id\n    ) {\n      category,\n      weight,\n      id,\n      user_id\n      transaction_id,\n      hold_user_id\n    }\n  }\n`\n\nexport const CHECK_OUT = gql`\n  mutation checkOut($id: String!){\n    removeHold(\n      id: $id\n    ) {\n      id,\n      borrower_id,\n      lender_id,\n      equipment_id,\n      check_out_timestamp,\n      check_in_timestamp\n    }\n  }\n`\n\nexport const CHECK_IN = gql`\n  mutation checkIn($id: String!){\n    removeHold(\n      id: $id\n    ) {\n      id,\n      borrower_id,\n      lender_id,\n      equipment_id,\n      check_out_timestamp,\n      check_in_timestamp\n    }\n  }\n`","import React, { useState, useEffect } from 'react'\nimport { useQuery, useMutation } from '@apollo/client'\nimport TableData from './TableData'\nimport { ALL_OTHER_EQUIPMENT } from '../queries'\nimport { PLACE_HOLD } from '../mutations'\n\nconst Marketplace = () => {\n\n  // Application State\n  const [available, setAvailable] = useState([])\n  // const [onHold, setOnHold] = useState([])\n  // const [checkedOut, setCheckedOut] = useState([])\n\n  // Defining the useQuery Hooks\n  const green = useQuery(ALL_OTHER_EQUIPMENT, { variables: { type: \"available\" } })\n  const yellow = useQuery(ALL_OTHER_EQUIPMENT, { variables: { type: \"hold\" } })\n  const red = useQuery(ALL_OTHER_EQUIPMENT, { variables: { type: \"checked out\" } })\n\n  // Defining useMutation Hook for placing holds\n  const [addHold] = useMutation(PLACE_HOLD, {\n    refetchQueries: [\n      {\n        query: ALL_OTHER_EQUIPMENT,\n        variables: { type: \"available\" }\n      },\n      {\n        query: ALL_OTHER_EQUIPMENT,\n        variables: { type: \"hold\" }\n      },\n    ]\n  })\n\n  // Event handler will render to call the mutation, addHold\n  const placeHold = async (equipment) => {\n    await addHold({\n      variables: { id: equipment }\n    })\n\n    console.log(`Placing a hold on equipment id: ${equipment}`)\n  }\n\n\n  // Available Equipment Hook\n  useEffect(() => {\n    if (green.data) {\n      setAvailable(green.data.allOtherEquipment)\n    }\n  }, [green.data])\n\n  if (green.loading || yellow.loading || red.loading)  {\n    return <div>loading...</div>\n  } else if (green.error || yellow.error || red.error) {\n      return <div>Error retrieving Marketplace data</div>\n  }\n\n  return(\n    <div>\n      <h1 className=\"view-header\">\n        Marketplace\n      </h1>\n      <div className=\"rows\">\n        <TableData label=\"Available Equipment\" equipment={available} eventHandler={placeHold} buttonLabel=\"Place Hold\" />\n      </div>\n\n    </div>\n  )\n}\n\nexport default Marketplace","import React from 'react'\n\nconst AvailableTable = ({ label, equipment }) => {\n  \n  return (\n    <div className=\"card\">\n      <h2>{label}</h2>\n      <table>\n        <tbody>\n          <tr>\n            <th>\n              Category\n            </th>\n            <th>\n              Weight\n            </th>\n          </tr>\n          {equipment.map(e =>\n            <tr key={e.id}>\n              <td>{e.category}</td>\n              <td>{e.weight}</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default AvailableTable","import React from 'react'\n\nconst ActiveTable = ({ primaryLabel, secondaryLabel, equipment, primaryFunction, secondaryFunction, primaryButtonLabel, secondaryButtonLabel }) => {\n  if(equipment.length){\n    if (secondaryFunction && secondaryButtonLabel){\n      return (\n        <div className=\"card\">\n          <h2 style={{ \"text-decoration\": \"underline\" }}>{primaryLabel}</h2>\n          <table>\n            <tbody>\n              <tr>\n                <th>\n                  Category\n                </th>\n                <th>\n                  Weight\n                </th>\n                <th>\n                  {secondaryLabel}\n                </th>\n              </tr>\n              {equipment.map(e =>\n                <tr key={e.id}>\n                  <td>{e.category}</td>\n                  <td>{e.weight}</td>\n                  <td><img src={e.avatar_url} alt=\"Gym Leader\" className=\"avatar\" /></td>\n                  <td><button onClick={() => primaryFunction(e.id)}>{primaryButtonLabel}</button></td>\n                  <td><button onClick={() => secondaryFunction(e.id)}>{secondaryButtonLabel}</button></td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      )\n    }\n    if (primaryFunction && primaryButtonLabel) {\n      return (\n        <div className=\"card\">\n          <h2 style={{ \"text-decoration\": \"underline\" }}>{primaryLabel}</h2>\n          <table>\n            <tbody>\n              <tr>\n                <th>\n                  Category\n                </th>\n                <th>\n                  Weight\n                </th>\n                <th>\n                  {secondaryLabel}\n                </th>\n              </tr>\n              {equipment.map(e =>\n                <tr key={e.id}>\n                  <td>{e.category}</td>\n                  <td>{e.weight}</td>\n                  <td><img src={e.avatar_url} alt=\"Gym Leader\" className=\"avatar\" /></td>\n                  <td><button onClick={() => primaryFunction(e.id)}>{primaryButtonLabel}</button></td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"card\">\n        <h2 style={{ \"text-decoration\": \"underline\" }}>{primaryLabel}</h2>\n        <table>\n          <tbody>\n            <tr>\n              <th>\n                Category\n              </th>\n              <th>\n                Weight\n              </th>\n              <th>\n                {secondaryLabel}\n              </th>\n            </tr>\n            {equipment.map(e =>\n              <tr key={e.id}>\n                <td>{e.category}</td>\n                <td>{e.weight}</td>\n                <td><img src={e.avatar_url} alt=\"Gym Leader\" className=\"avatar\" /></td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n    )\n\n  }\n  \n  return (\n    <div className=\"card\">\n      <h2>{primaryLabel}</h2>\n      <p>No active items</p>\n    </div>\n  )\n}\n\nexport default ActiveTable","// React-Select options\nexport const categoryOptions = [\n  {\n    value: 'Dumbbell',\n    label: 'Dumbbell'\n  },\n  {\n    value: 'Kettlebell',\n    label: 'Kettlebell'\n  }\n]\nexport const weightOptions = [\n  {\n    value: 5,\n    label: '5'\n  },\n  {\n    value: 10,\n    label: '10'\n  },\n  {\n    value: 15,\n    label: '15'\n  },\n  {\n    value: 20,\n    label: '20'\n  },\n  {\n    value: 25,\n    label: '25'\n  },\n  {\n    value: 30,\n    label: '30'\n  },\n  {\n    value: 35,\n    label: '35'\n  },\n  {\n    value: 40,\n    label: '40'\n  },\n  {\n    value: 45,\n    label: '45'\n  },\n  {\n    value: 50,\n    label: '50'\n  },\n  {\n    value: 55,\n    label: '55'\n  },\n  {\n    value: 60,\n    label: '60'\n  },\n  {\n    value: 65,\n    label: '65'\n  },\n  {\n    value: 70,\n    label: '70'\n  },\n  {\n    value: 75,\n    label: '75'\n  },\n  {\n    value: 80,\n    label: '80'\n  },\n  {\n    value: 85,\n    label: '85'\n  },\n  {\n    value: 90,\n    label: '90'\n  },\n  {\n    value: 95,\n    label: '95'\n  },\n  {\n    value: 100,\n    label: '100'\n  },\n]","import React, { useState, useEffect } from 'react'\nimport { useQuery, useMutation } from '@apollo/client'\nimport AvailableTable from './AvailableTable'\nimport ActiveTable from './ActiveTable'\nimport { MY_EQUIPMENT } from '../queries'\nimport { ADD_EQUIPMENT, REMOVE_HOLD, CHECK_OUT, CHECK_IN } from '../mutations'\nimport { categoryOptions, weightOptions } from '../data/options'\nimport Select from 'react-select'\n\nconst Equipment = () => {\n\n  // Application State\n  // Table State\n  const [available, setAvailable] = useState([])\n  const [onHold, setOnHold] = useState([])\n  const [checkedOut, setCheckedOut] = useState([])\n  // Form State\n  const [category, setCategory] = useState('')\n  const [weight, setWeight] = useState('')\n\n  // Defining the useQuery Hooks\n  const green = useQuery(MY_EQUIPMENT, { variables: { type: \"available\" } })\n  const yellow = useQuery(MY_EQUIPMENT, { variables: { type: \"hold\" } })\n  const red = useQuery(MY_EQUIPMENT, { variables: { type: \"checked out\" } })\n\n  // DEFINING FUNCTIONALITY FOR ADDING, REMOVING, CHECKING OUT & CHECKING IN\n  // Add Equipment\n  // Defining useMutation Hook for adding new equipment\n  const [addEquipment] = useMutation(ADD_EQUIPMENT, {\n    refetchQueries: [\n      {\n        query: MY_EQUIPMENT,\n        variables: { type: \"available\" }\n      }\n    ]\n  })\n\n  // Event handler we will render to call the mutation, addEquipment\n  const newEquipment = async (event) => {\n    event.preventDefault()\n\n    if (category.value && weight.value){\n\n      await addEquipment({\n        variables: {\n          category: category.value,\n          weight: parseInt(weight.value)\n        }\n      })\n\n      setCategory('')\n      setWeight('')\n    }\n\n    return\n  }\n\n  // Remove Hold\n  // Defining useMutation Hook for removing a hold\n  const [cancelHold] = useMutation(REMOVE_HOLD, {\n    refetchQueries: [\n      {\n        query: MY_EQUIPMENT,\n        variables: { type: \"available\" }\n      },\n      {\n        query: MY_EQUIPMENT,\n        variables: { type: \"hold\" }\n      }\n    ]\n  })\n\n  // Event handler we will render to call the mutation, cancelHold\n  const holdRemove = async (equipment) => {\n\n    await cancelHold({\n      variables: { id: equipment }\n    })\n  }\n\n  // Check Out\n  // Defining useMutation Hook for checking out\n  const [checkOut] = useMutation(CHECK_OUT, {\n    refetchQueries: [\n      {\n        query: MY_EQUIPMENT,\n        variables: { type: \"hold\" }\n      },\n      {\n        query: MY_EQUIPMENT,\n        variables: { type: \"checked out\" }\n      }\n    ]\n  })\n\n  // Event handler we will render to call the mutation, cancelHold\n  const takeOut = async (equipment) => {\n\n    await checkOut({\n      variables: { id: equipment }\n    })\n\n    console.log(`Checking back in equipment id: ${equipment}`)\n  }\n\n  // Check In\n  // Defining useMutation Hook for checking in\n  const [checkIn] = useMutation(CHECK_IN, {\n    refetchQueries: [\n      {\n        query: MY_EQUIPMENT,\n        variables: { type: \"available\" }\n      },\n      {\n        query: MY_EQUIPMENT,\n        variables: { type: \"checked out\" }\n      }\n    ]\n  })\n\n  // Event handler we will render to call the mutation, cancelHold\n  const takeIn = async (transaction) => {\n\n    await checkIn({\n      variables: { id: transaction }\n    })\n\n    console.log(`Checking back in equipment, transaction id: ${transaction}`)\n  }\n\n  // Available Equipment Hook\n  useEffect(() => {\n    if (green.data) {\n      setAvailable(green.data.myEquipment)\n    }\n  }, [green.data])\n\n  // Equipment on hold Hook\n  useEffect(() => {\n    if (yellow.data) {\n      setOnHold(yellow.data.myEquipment)\n    }\n  }, [yellow.data])\n\n  // Equipment checked out Hook\n  useEffect(() => {\n    if (red.data) {\n      setCheckedOut(red.data.myEquipment)\n    }\n  }, [red.data])\n\n  if (green.loading || yellow.loading || red.loading) {\n    return <div>loading...</div>\n  } else if (green.error || yellow.error || red.error) {\n    return <div>Error retrieving Marketplace data</div>\n  }\n\n  return(\n    <div>\n      <h1 className=\"view-header\">My Equipment</h1>\n\n      <div className=\"rows\">\n        <AvailableTable label=\"Available\" equipment={available}/>\n        <ActiveTable \n          primaryLabel=\"On Hold\"\n          secondaryLabel=\"Requested By\"\n          equipment={onHold}\n          primaryFunction={holdRemove}\n          secondaryFunction={takeOut}\n          primaryButtonLabel=\"Remove Hold\"\n          secondaryButtonLabel=\"Check Out\"\n        />\n        <ActiveTable \n          primaryLabel=\"Checked Out\"\n          secondaryLabel=\"Borrower\"\n          equipment={checkedOut}\n          primaryFunction={takeIn}\n          primaryButtonLabel=\"Check In\"\n        />\n      </div>\n      <div className=\"view-header\">\n        <form onSubmit={newEquipment}>\n          <div>\n            Category:\n            <Select\n              onChange={setCategory}\n              options={categoryOptions}\n              className='input-add-equip'\n            />\n          </div>\n          <div>\n            Weight:\n            <Select\n              onChange={setWeight}\n              options={weightOptions}\n              className='input-add-equip'\n            />\n          </div>\n          <button type='submit' className='add-equip-button'>Add Equipment</button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default Equipment","import React from 'react'\n\nconst TableData = ({ transactions, columnLabel }) => {\n  return (\n    <div className=\"card\">\n      <table>\n        <tbody>\n          <tr>\n            <th>\n              Category\n            </th>\n            <th>\n              Weight\n            </th>\n            <th>\n              Checkout\n            </th>\n            <th>\n              Checkin\n            </th>\n            <th>\n              {columnLabel}\n            </th>\n          </tr>\n          {transactions.map(e =>\n            <tr key={e.id}>\n              <td>{e.category}</td>\n              <td>{e.weight}</td>\n              <td>{e.check_out_timestamp}</td>\n              <td>{e.check_in_timestamp}</td>\n              <td><img src={e.avatar_url} alt=\"Gym Leader\" className=\"avatar\" /></td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default TableData","import React, { useState, useEffect }from 'react'\nimport { useQuery } from '@apollo/client'\nimport { MY_BORROWING_HISTORY } from '../queries'\nimport TableHistory from './TableHistory'\nconst BorrowingHistory = () => {\n\n  // Application State\n  const [transactions, setTransactions] = useState([])\n  const [weightQuery, setWeightQuery] = useState('')\n  const [categoryQuery, setCategoryQuery] = useState('')\n  const [lenderQuery, setLenderQuery] = useState('')\n\n  // Defining the useQuery Hooks\n  const ledger = useQuery(MY_BORROWING_HISTORY)\n\n  // Transactions useEffect Hook\n  useEffect(() => {\n    if (ledger.data) {\n      setTransactions(ledger.data.myBorrowingHistory)\n    }\n  }, [ledger.data])\n\n  // Controlled Component Functions\n  const handleWeightQuery = (event) => {\n    console.log(event.target.value)\n    setWeightQuery(event.target.value)\n  }\n\n  const handleCategoryQuery = (event) => {\n    console.log(event.target.value)\n    setCategoryQuery(event.target.value)\n  }\n\n  const handleLenderQuery = (event) => {\n    console.log(event.target.value)\n    setLenderQuery(event.target.value)\n  }\n\n  if (ledger.loading) {\n    return <div>loading...</div>\n  } else if (ledger.error) {\n    return <div>Error retrieving Borrowing History data</div>\n  } else if (!ledger.data.myBorrowingHistory.length) {\n    return <div className=\"view-header\"><h1>You have not borrowed any equipment yet</h1></div>\n  }\n\n  // Creating a set of all the unique weight values\n  const weightSet = new Set()\n  ledger.data.myBorrowingHistory.map(t => weightSet.add(t.weight))\n  const uniqueWeights = [...weightSet]\n\n  // Event handler for all weights\n  const filterWeight = (weight) => {\n    const shortLedger = ledger.data.myBorrowingHistory.filter(t => t.weight === weight)\n\n    setTransactions(shortLedger)\n  }\n\n  // Creating a set of all the unique equipment category values\n  const categorySet = new Set()\n  ledger.data.myBorrowingHistory.map(t => categorySet.add(t.category))\n  const uniqueCategories = [...categorySet]\n\n  // Event handler for all categories\n  const filterCategory = (category) => {\n    const shortLedger = ledger.data.myBorrowingHistory.filter(t => t.category === category)\n\n    setTransactions(shortLedger)\n  }\n\n  // Creating a set of all the unique lenders\n  const lenderSet = new Set()\n  ledger.data.myBorrowingHistory.map(t => lenderSet.add(t.name))\n  const uniqueLenders = [...lenderSet]\n\n  // Event handler for all categories\n  const filterLender = (lender) => {\n    const shortLedger = ledger.data.myBorrowingHistory.filter(t => t.name === lender)\n\n    setTransactions(shortLedger)\n  }\n\n  // Respective reset event handler\n  const reset = () => {\n    setTransactions(ledger.data.myBorrowingHistory)\n  }\n\n  return (\n    <div>\n      <h1 className=\"view-header\">\n        My Borrowing History\n      </h1>\n      <h3 className=\"view-header\">\n        Breakdown of Your Borrowing:\n      </h3>\n      <div className=\"view-header\">\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                Weights:\n              </td>\n              <td>\n                {uniqueWeights.map(weight =>\n                  <button key={weight} className='filter-button' type='button' onClick={() => filterWeight(weight)}>{weight} lb</button>\n                )}\n              </td>\n            </tr>\n            <tr>\n              <td>\n                Categories:\n              </td>\n              <td>\n                {uniqueCategories.map(category =>\n                  <button key={category} className='filter-button' type='button' onClick={() => filterCategory(category)}>{category}</button>\n                )}\n              </td>\n            </tr>\n            <tr>\n              <td>\n                Lenders:\n              </td>\n              <td>\n                {uniqueLenders.map(lender =>\n                  <button key={lender} className='filter-button' type='button' onClick={() => filterLender(lender)}>{lender}</button>\n                )}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <button type='button' onClick={() => reset()}>Reset Filters</button>\n      </div>\n\n      <br/>\n      <br/>\n      <br/>\n\n      <h2 className=\"view-header\">\n        Ledger of Transactions\n      </h2>\n      <div className=\"rows\">\n        <TableHistory transactions={transactions} columnLabel=\"Lender\" />\n      </div>\n    </div>\n  )\n}\n\nexport default BorrowingHistory","import React, { useState, useEffect }from 'react'\nimport { useQuery } from '@apollo/client'\nimport { MY_LENDING_HISTORY } from '../queries'\nimport TableHistory from './TableHistory'\n\nconst LendingHistory = () => {\n\n  // Application State\n  const [transactions, setTransactions] = useState([])\n\n  // Defining the useQuery Hooks\n  const ledger = useQuery(MY_LENDING_HISTORY)\n\n  // Transactions useEffect Hook\n  useEffect(() => {\n    if (ledger.data) {\n      setTransactions(ledger.data.myLendingHistory)\n    }\n  }, [ledger.data]) // eslint-disable-line\n\n  if (ledger.loading) {\n    return <div>loading...</div>\n  } else if (ledger.error) {\n    return <div>Error retrieving Lending History data</div>\n  } else if (!ledger.data.myLendingHistory.length) {\n    return <div className=\"view-header\"><h1>You have not lent out any equipment yet</h1></div>\n  }\n\n  return (\n    <div>\n      <h1 className=\"view-header\">\n        My Lending History\n      </h1>\n      <div className=\"rows\">\n        <TableHistory transactions={transactions} columnLabel=\"Borrower\" />\n      </div>\n    </div>\n  )\n}\n\nexport default LendingHistory","import React, { useState, useEffect } from 'react'\nimport { useQuery, useMutation } from '@apollo/client'\nimport { MY_ACCOUNT, EQUIPMENT_COUNT, MY_HOLDS, MY_CHECKOUTS } from '../queries'\nimport { CANCEL_MY_HOLD } from '../mutations'\nimport ActiveTable from './ActiveTable'\n\nconst Profile = () => {\n\n  // Application State\n  const [info, setInfo] = useState([])\n  const [count, setCount] = useState(null)\n  const [holds, setHolds] = useState([])\n  const [checkOuts, setCheckOuts] = useState([])\n\n  // Defining the useQuery Hooks\n  const account = useQuery(MY_ACCOUNT)\n  const equipmentCount = useQuery(EQUIPMENT_COUNT)\n  const myHolds = useQuery(MY_HOLDS)\n  const myCheckOuts = useQuery(MY_CHECKOUTS)\n\n  // Profile Info Hook\n  useEffect(() => {\n    if (account.data) {\n      setInfo(account.data.myAccount[0])\n    }\n  }, [account.data]) // eslint-disable-line\n\n  // Available Equipment Hook\n  useEffect(() => {\n    if (equipmentCount.data) {\n      setCount(equipmentCount.data.equipmentCount)\n    }\n  }, [equipmentCount.data]) // eslint-disable-line\n\n  // Holds Hook\n  useEffect(() => {\n    if (myHolds.data) {\n      setHolds(myHolds.data.myHolds)\n    }\n  }, [myHolds.data]) // eslint-disable-line\n\n  // CheckOuts Hook\n  useEffect(() => {\n    if (myCheckOuts.data) {\n      setCheckOuts(myCheckOuts.data.myCheckOuts)\n    }\n  }, [myCheckOuts.data]) // eslint-disable-line\n\n  // Remove Hold\n  // Defining useMutation Hook for removing a hold\n  const [cancelHold] = useMutation(CANCEL_MY_HOLD, {\n    refetchQueries: [\n      {\n        query: MY_HOLDS\n      }\n    ]\n  })\n\n  // Event handler we will render to call the mutation, cancelHold\n  const holdRemove = async (equipment) => {\n    await cancelHold({\n      variables: { id: equipment }\n    })\n  }\n\n  if (account.loading && equipmentCount.loading && myHolds.loading && myCheckOuts.loading) {\n    return <div>loading...</div>\n  } else if (account.error || equipmentCount.error || myHolds.error || myCheckOuts.error) {\n    return <div>Error retrieving Dashboard data</div>\n  }\n\n  return(\n    <div>\n      <h1 className=\"view-header\">Dashboard</h1>\n        <div className=\"rows\">\n          <div className=\"card\">\n            <h2 style={{\"text-decoration\": \"underline\"}}>Account Info:</h2>\n            <p><b>Name:</b> {info.name}</p>\n            <p><b>Number:</b> {info.number}</p>\n            <p><b>Email:</b> {info.email}</p>\n            <p><b>House:</b> {info.house}</p>\n            <p><b>Street:</b> {info.street}</p>\n            <p><b>City:</b> {info.city}</p>\n          </div>\n          <div className=\"card\">\n            <h2 style={{\"text-decoration\": \"underline\"}}>Stats For Me:</h2>\n            <p><b># of Equipment on Platform:</b></p>\n            <h1>{count}</h1>\n          </div>\n        </div>\n        <div className=\"rows\">\n          <ActiveTable primaryLabel=\"Equipment I Have Requested:\" secondaryLabel=\"Owner\" equipment={holds} primaryFunction={holdRemove} primaryButtonLabel=\"Cancel Hold\"/>\n          <ActiveTable primaryLabel=\"Equipment I Have Checked Out:\" secondaryLabel=\"Owner\" equipment={checkOuts} />\n        </div>\n    </div>\n\n  )\n}\n\nexport default Profile","import React, { useState, useEffect } from 'react'\n// Importing React-Router\nimport {\n  // BrowserRouter as Router,\n  HashRouter,\n  Switch,\n  Route,\n  NavLink\n} from \"react-router-dom\"\n\n// import { useQuery } from '@apollo/client'\n// import { MY_ACCOUNT } from './queries'\nimport Marketplace from './components/Marketplace'\nimport Equipment from './components/Equipment'\nimport BorrowingHistory from './components/BorrowingHistory'\nimport LendingHistory from './components/LendingHistory'\nimport Profile from './components/Profile'\nimport './App.css'\n\n// Defining constants for faster loading\nconst profilePictureURL = 'https://cdn2.bulbagarden.net/upload/7/75/VSBrock_Masters.png'\nconst userName = 'Brock'\n\nfunction App() {\n  return (\n    <div>\n\n      <HashRouter>\n        <div className=\"sidebar-desktop\">\n          <div className=\"sidebar\">\n            <NavLink to=\"/\">\n              <h1 className=\"logo mobile-only\">GYM SHARE</h1>\n              <div className=\"welcome desktop-only\">\n                <img src={profilePictureURL} alt=\"Profile Picture\" className=\"avatar\" />\n                Welcome {userName}!\n              </div>\n            </NavLink>\n\n\n            <NavLink \n              to=\"/marketplace\" \n              className=\"link nav-select\" \n              activeStyle={{\n                fontWeight: \"bold\",\n                color: \"white\"\n              }}\n            >\n              <i className=\"fas fa-store icon-spacing\" />\n              Marketplace\n            </NavLink>\n\n            <NavLink \n              to=\"/equipment\" \n              className=\"link nav-select\" \n              activeStyle={{\n                fontWeight: \"bold\",\n                color: \"white\"\n              }}\n            >\n              <i class=\"fas fa-dumbbell icon-spacing\" />\n              Equipment\n            </NavLink>\n\n            <NavLink \n              to=\"/borrowingHistory\" \n              className=\"link nav-select\" \n              activeStyle={{\n                fontWeight: \"bold\",\n                color: \"white\"\n              }}\n            >\n              <i class=\"fas fa-hand-holding-medical icon-spacing\" />\n              Borrowing History\n            </NavLink>\n\n            <NavLink \n              to=\"/lendingHistory\" \n              className=\"link nav-select\" \n              activeStyle={{\n                fontWeight: \"bold\",\n                color: \"white\"\n              }}\n            >\n              <i class=\"fas fa-handshake icon-spacing\" />\n              Lending History\n            </NavLink>\n\n\n            {/* Disabled logout button for demo purposes */}\n            {/* <button className=\"logout-button\" disabled><i class=\"fas fa-sign-out-alt icon-spacing\"/>Logout</button> */}\n          </div>\n        </div>\n\n        <div className=\"sidebar-mobile\">\n          <div className=\"sidebar\">\n            <NavLink to=\"/\" className=\"footer\">\n              <img src={profilePictureURL} alt=\"Profile Picture\" className=\"avatar\" />\n                <h6>Dashboard</h6>\n            </NavLink>\n\n            <NavLink \n              to=\"/marketplace\" \n              className=\"footer\"\n              activeStyle={{\n                fontWeight: \"bold\",\n                color: \"white\"\n              }}\n            >\n              <i className=\"fas fa-store fa-2x\" />\n              <h6>Marketplace</h6>\n            </NavLink>\n\n            \n            <NavLink \n              to=\"/equipment\" \n              className=\"footer\"\n              activeStyle={{\n                fontWeight: \"bold\",\n                color: \"white\"\n              }}\n            >\n              <i className=\"fas fa-dumbbell fa-2x icon-mobile\" />\n              <div className=\"caption\">\n                <h6>Equipment</h6>\n              </div>\n            </NavLink>\n           \n\n            <NavLink \n              to=\"/borrowingHistory\" \n              className=\"footer\"\n              activeStyle={{\n                fontWeight: \"bold\",\n                color: \"white\"\n              }}\n            >\n              <i class=\"fas fa-hand-holding-medical fa-2x\" />\n              <h6>Borrowing History</h6>\n            </NavLink>\n\n            <NavLink \n              to=\"/lendingHistory\" \n              className=\"footer\"\n              activeStyle={{\n                fontWeight: \"bold\",\n                color: \"white\"\n              }}\n            >\n              <i class=\"fas fa-handshake fa-2x\" />\n              <h6>Lending History</h6>\n            </NavLink>\n\n\n            {/* Disabled logout button for demo purposes */}\n            {/* <button className=\"logout-button\" disabled><i class=\"fas fa-sign-out-alt icon-spacing\"/>Logout</button> */}\n          </div>\n        </div>\n\n        \n\n\n        <div className=\"main\">\n          <Switch>\n            <Route exact={true} path=\"/\">\n              <Profile />\n            </Route>\n            <Route exact={true} path=\"/marketplace\">\n              <Marketplace />\n            </Route>\n            <Route exact={true} path=\"/equipment\">\n              <Equipment />\n            </Route>\n            <Route exact={true} path=\"/borrowingHistory\">\n              <BorrowingHistory />\n            </Route>\n            <Route exact={true} path=\"/lendingHistory\">\n              <LendingHistory />\n            </Route>\n          </Switch>\n        </div>\n        \n      </HashRouter>\n      \n\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles.css'\nimport App from './App'\n\nimport { ApolloClient, HttpLink, InMemoryCache, ApolloProvider } from '@apollo/client'\n\nfunction determineNodeEnivironment() {\n  if (process.env.NODE_ENV === \"development\") return 'http://localhost:3006/graphql'\n  return 'https://gym-share.herokuapp.com/graphql'\n}\n\nconst apiURI = determineNodeEnivironment()\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    uri: apiURI\n  })\n})\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}