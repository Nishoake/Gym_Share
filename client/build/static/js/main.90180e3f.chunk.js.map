{"version":3,"sources":["components/TableData.js","queries.js","mutations.js","components/Marketplace.js","components/AvailableTable.js","components/ActiveTable.js","components/Equipment.js","components/TableHistory.js","components/BorrowingHistory.js","components/LendingHistory.js","components/Profile.js","App.js","index.js"],"names":["TableHistory","label","equipment","eventHandler","buttonLabel","className","map","e","key","id","category","weight","src","avatar_url","alt","onClick","ALL_OTHER_EQUIPMENT","gql","MY_EQUIPMENT","MY_BORROWING_HISTORY","MY_LENDING_HISTORY","MY_ACCOUNT","PLACE_HOLD","ADD_EQUIPMENT","REMOVE_HOLD","CHECK_OUT","CHECK_IN","Marketplace","useState","available","setAvailable","green","useQuery","variables","type","yellow","red","useMutation","refetchQueries","query","addHold","placeHold","a","console","log","useEffect","data","allOtherEquipment","loading","error","AvailableTable","ActiveTable","primaryLabel","secondaryLabel","primaryFunction","secondaryFunction","primaryButtonLabel","secondaryButtonLabel","length","avatar","Equipment","onHold","setOnHold","checkedOut","setCheckedOut","setCategory","setWeight","addEquipment","newEquipment","event","preventDefault","value","parseInt","cancelHold","holdRemove","checkOut","takeOut","checkIn","takeIn","transaction","myEquipment","onSubmit","onChange","options","TableData","transactions","columnLabel","check_out_timestamp","check_in_timestamp","name","number","BorrowingHistory","setTransactions","ledger","myBorrowingHistory","weightSet","Set","t","add","uniqueWeights","categorySet","uniqueCategories","lenderSet","uniqueLenders","shortLedger","filter","filterWeight","filterCategory","lender","filterLender","LendingHistory","myLendingHistory","Profile","info","setInfo","account","myAccount","style","email","house","street","city","profilePictureURL","App","to","activeStyle","fontWeight","color","class","exact","path","client","ApolloClient","cache","InMemoryCache","link","HttpLink","uri","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90180e3f.chunk.js","sourcesContent":["import React from 'react'\n\nconst TableHistory = ({ label, equipment, eventHandler, buttonLabel }) => {\n  // if(equipment[0]) {\n  //   console.log(`Equipment Array = ${JSON.stringify(equipment)}`)\n  //   console.log(`1st ID = ${equipment[1].id}`)\n  // }\n  \n  return (\n    <div className=\"card\">\n      <h2>{label}</h2>\n      <table>\n        <tbody>\n          <tr>\n            <th>\n              Category\n            </th>\n            <th>\n              Weight\n            </th>\n            <th>\n              Owner\n            </th>\n            {/* <th>\n              Number\n            </th>\n            <th>\n              Name\n            </th> */}\n            <th>\n              {buttonLabel}\n            </th>\n          </tr>\n          {equipment.map(e =>\n            <tr key={e.id}>\n              <td>{e.category}</td>\n              <td>{e.weight}</td>\n              {/* <td>{e.name}</td>\n              <td>{e.number}</td> */}\n              <td><img src={e.avatar_url} alt=\"Gym Leader\" className=\"avatar\"/></td>\n              <td><button onClick={() => eventHandler(e.id)}>{buttonLabel}</button></td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default TableHistory","import { gql } from '@apollo/client'\n\nexport const ALL_OTHER_EQUIPMENT = gql`\n  query filterOtherEquipmentByType($type: String!){\n    allOtherEquipment(\n      type: $type\n    ) {\n      id,\n      category,\n      weight,\n      name,\n      number,\n      avatar_url\n    }\n  }\n`\n\nexport const MY_EQUIPMENT = gql`\n  query filterMyEquipmentByType($type: String!){\n    myEquipment(\n      type: $type\n    ) {\n      id,\n      category,\n      weight,\n      name,\n      number,\n      avatar_url\n    }\n  }\n`\n\nexport const MY_BORROWING_HISTORY = gql`\n  query{\n    myBorrowingHistory{\n      id,\n      category,\n      weight,\n      check_out_timestamp,\n      check_in_timestamp,\n      name,\n      number,\n      avatar_url\n    }\n  }\n`\n\nexport const MY_LENDING_HISTORY = gql`\n  query{\n    myLendingHistory{\n      id,\n      category,\n      weight,\n      check_out_timestamp,\n      check_in_timestamp,\n      name,\n      number,\n      avatar_url\n    }\n  }\n`\n\nexport const MY_ACCOUNT = gql`\n  query{\n    myAccount{\n      name,\n      number,\n      email,\n      house,\n      street,\n      city,\n      avatar_url\n    }\n  }\n`","import { gql } from '@apollo/client'\n\nexport const PLACE_HOLD = gql`\n  mutation placeHold($id: String!){\n    placeHold(\n      id: $id\n    ) {\n      category\n      weight\n      id\n      transaction_id\n      hold_user_id\n    }\n  }\n`\n\nexport const ADD_EQUIPMENT = gql`\n  mutation addNewEquipment($category: String!, $weight: Int!){\n    addEquipment(\n      category: $category,\n      weight: $weight\n    ) {\n      category,\n      weight,\n      id,\n      user_id,\n      transaction_id,\n      hold_user_id\n    }\n  }\n`\n\nexport const REMOVE_HOLD = gql`\n  mutation removeHold($id: String!){\n    removeHold(\n      id: $id\n    ) {\n      category,\n      weight,\n      id,\n      user_id\n      transaction_id,\n      hold_user_id\n    }\n  }\n`\n\nexport const CHECK_OUT = gql`\n  mutation checkOut($id: String!){\n    removeHold(\n      id: $id\n    ) {\n      id,\n      borrower_id,\n      lender_id,\n      equipment_id,\n      check_out_timestamp,\n      check_in_timestamp\n    }\n  }\n`\n\nexport const CHECK_IN = gql`\n  mutation checkIn($id: String!){\n    removeHold(\n      id: $id\n    ) {\n      id,\n      borrower_id,\n      lender_id,\n      equipment_id,\n      check_out_timestamp,\n      check_in_timestamp\n    }\n  }\n`","import React, { useState, useEffect } from 'react'\nimport { useQuery, useMutation } from '@apollo/client'\nimport TableHistory from './TableData'\nimport { ALL_OTHER_EQUIPMENT } from '../queries'\nimport { PLACE_HOLD } from '../mutations'\n\nconst Marketplace = () => {\n\n  // Application State\n  const [available, setAvailable] = useState([])\n  // const [onHold, setOnHold] = useState([])\n  // const [checkedOut, setCheckedOut] = useState([])\n\n  // Defining the useQuery Hooks\n  const green = useQuery(ALL_OTHER_EQUIPMENT, { variables: { type: \"available\" } })\n  const yellow = useQuery(ALL_OTHER_EQUIPMENT, { variables: { type: \"hold\" } })\n  const red = useQuery(ALL_OTHER_EQUIPMENT, { variables: { type: \"checked out\" } })\n\n  // Defining useMutation Hook for placing holds\n  const [addHold] = useMutation(PLACE_HOLD, {\n    refetchQueries: [\n      {\n        query: ALL_OTHER_EQUIPMENT,\n        variables: { type: \"available\" }\n      },\n      {\n        query: ALL_OTHER_EQUIPMENT,\n        variables: { type: \"hold\" }\n      },\n    ]\n  })\n\n  // Event handler we will render to call the mutation, addHold\n  const placeHold = async (equipment) => {\n    await addHold({\n      variables: { id: equipment }\n    })\n\n    console.log(`Placing a hold on equipment id: ${equipment}`)\n  }\n\n\n  // Available Equipment Hook\n  useEffect(() => {\n    if (green.data) {\n      setAvailable(green.data.allOtherEquipment)\n    }\n  }, [green.data]) // eslint-disable-line\n\n  // // Equipment on hold Hook\n  // useEffect(() => {\n  //   if(yellow.data){\n  //     setOnHold(yellow.data.allOtherEquipment)\n  //   }\n  // }, [yellow.data]) // eslint-disable-line\n\n  // // Equipment checked out Hook\n  // useEffect(() => {\n  //   if(red.data){\n  //     setCheckedOut(red.data.allOtherEquipment)\n  //   }\n  // }, [red.data]) // eslint-disable-line\n\n  if (green.loading || yellow.loading || red.loading)  {\n    return <div>loading...</div>\n  } else if (green.error || yellow.error || red.error) {\n      return <div>Error retrieving Marketplace data</div>\n  }\n\n  return(\n    <div>\n      <h1 className=\"view-header\">\n        Marketplace\n      </h1>\n      <div className=\"rows\">\n        <TableHistory label=\"Available Equipment\" equipment={available} eventHandler={placeHold} buttonLabel=\"Place Hold\" />\n      </div>\n\n    </div>\n  )\n}\n\nexport default Marketplace","import React from 'react'\n\nconst AvailableTable = ({ label, equipment }) => {\n  \n  return (\n    <div className=\"card\">\n      <h2>{label}</h2>\n      <table>\n        <tbody>\n          <tr>\n            <th>\n              Category\n            </th>\n            <th>\n              Weight\n            </th>\n          </tr>\n          {equipment.map(e =>\n            <tr key={e.id}>\n              <td>{e.category}</td>\n              <td>{e.weight}</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default AvailableTable","import React from 'react'\n\nconst ActiveTable = ({ primaryLabel, secondaryLabel, equipment, primaryFunction, secondaryFunction, primaryButtonLabel, secondaryButtonLabel }) => {\n  \n  if(equipment.length){\n    if (secondaryFunction && secondaryButtonLabel){\n      return (\n        <div className=\"card\">\n          <h2>{primaryLabel}</h2>\n          <table>\n            <tbody>\n              <tr>\n                <th>\n                  Category\n                </th>\n                <th>\n                  Weight\n                </th>\n                <th>\n                  {secondaryLabel}\n                </th>\n              </tr>\n              {equipment.map(e =>\n                <tr key={e.id}>\n                  <td>{e.category}</td>\n                  <td>{e.weight}</td>\n                  <td>{e.avatar}</td>\n                  <td><button onClick={() => primaryFunction(e.id)}>{primaryButtonLabel}</button></td>\n                  <td><button onClick={() => secondaryFunction(e.id)}>{secondaryButtonLabel}</button></td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      )\n    }\n    return (\n      <div className=\"card\">\n        <h2>{primaryLabel}</h2>\n        <table>\n          <tbody>\n            <tr>\n              <th>\n                Category\n              </th>\n              <th>\n                Weight\n              </th>\n              <th>\n                {secondaryLabel}\n              </th>\n            </tr>\n            {equipment.map(e =>\n              <tr key={e.id}>\n                <td>{e.category}</td>\n                <td>{e.weight}</td>\n                <td>{e.avatar}</td>\n                <td><button onClick={() => primaryFunction(e.id)}>{primaryButtonLabel}</button></td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n  \n  return (\n    <div className=\"card\">\n      <h2>{primaryLabel}</h2>\n      <p>No active items</p>\n    </div>\n  )\n}\n\nexport default ActiveTable","import React, { useState, useEffect } from 'react'\nimport { useQuery, useMutation } from '@apollo/client'\nimport AvailableTable from './AvailableTable'\nimport ActiveTable from './ActiveTable'\nimport { MY_EQUIPMENT } from '../queries'\nimport { ADD_EQUIPMENT, REMOVE_HOLD, CHECK_OUT, CHECK_IN } from '../mutations'\nimport Select from 'react-select'\n\nconst Equipment = () => {\n\n  // Application State\n  // Table State\n  const [available, setAvailable] = useState([])\n  const [onHold, setOnHold] = useState([])\n  const [checkedOut, setCheckedOut] = useState([])\n  // Form State\n  const [category, setCategory] = useState('')\n  const [weight, setWeight] = useState('')\n\n  // Defining the useQuery Hooks\n  const green = useQuery(MY_EQUIPMENT, { variables: { type: \"available\" } })\n  const yellow = useQuery(MY_EQUIPMENT, { variables: { type: \"hold\" } })\n  const red = useQuery(MY_EQUIPMENT, { variables: { type: \"checked out\" } })\n\n  // DEFINING FUNCTIONALITY FOR ADDING, REMOVING, CHECKING OUT & CHECKING IN\n  // Add Equipment\n  // Defining useMutation Hook for adding new equipment\n  const [addEquipment] = useMutation(ADD_EQUIPMENT, {\n    refetchQueries: [\n      {\n        query: MY_EQUIPMENT,\n        variables: { type: \"available\" }\n      }\n    ]\n  })\n\n  // Event handler we will render to call the mutation, addEquipment\n  const newEquipment = async (event) => {\n    event.preventDefault()\n\n    if (category.value && weight.value){\n\n      await addEquipment({\n        variables: {\n          category: category.value,\n          weight: parseInt(weight.value)\n        }\n      })\n\n      setCategory('')\n      setWeight('')\n    }\n\n    return\n  }\n\n  // Remove Hold\n  // Defining useMutation Hook for removing a hold\n  const [cancelHold] = useMutation(REMOVE_HOLD, {\n    refetchQueries: [\n      {\n        query: MY_EQUIPMENT,\n        variables: { type: \"available\" }\n      },\n      {\n        query: MY_EQUIPMENT,\n        variables: { type: \"hold\" }\n      }\n    ]\n  })\n\n  // Event handler we will render to call the mutation, cancelHold\n  const holdRemove = async (equipment) => {\n\n    await cancelHold({\n      variables: { id: equipment }\n    })\n\n    console.log(`Cancelling hold on equipment id: ${equipment}`)\n  }\n\n  // Check Out\n  // Defining useMutation Hook for checking out\n  const [checkOut] = useMutation(CHECK_OUT, {\n    refetchQueries: [\n      {\n        query: MY_EQUIPMENT,\n        variables: { type: \"hold\" }\n      },\n      {\n        query: MY_EQUIPMENT,\n        variables: { type: \"checked out\" }\n      }\n    ]\n  })\n\n  // Event handler we will render to call the mutation, cancelHold\n  const takeOut = async (equipment) => {\n\n    await checkOut({\n      variables: { id: equipment }\n    })\n\n    console.log(`Checking back in equipment id: ${equipment}`)\n  }\n\n  // Check In\n  // Defining useMutation Hook for checking in\n  const [checkIn] = useMutation(CHECK_IN, {\n    refetchQueries: [\n      {\n        query: MY_EQUIPMENT,\n        variables: { type: \"available\" }\n      },\n      {\n        query: MY_EQUIPMENT,\n        variables: { type: \"checked out\" }\n      }\n    ]\n  })\n\n  // Event handler we will render to call the mutation, cancelHold\n  const takeIn = async (transaction) => {\n\n    await checkIn({\n      variables: { id: transaction }\n    })\n\n    console.log(`Checking back in equipment, transaction id: ${transaction}`)\n  }\n\n  // Available Equipment Hook\n  useEffect(() => {\n    if (green.data) {\n      setAvailable(green.data.myEquipment)\n    }\n  }, [green.data]) // eslint-disable-line\n\n  // Equipment on hold Hook\n  useEffect(() => {\n    if (yellow.data) {\n      setOnHold(yellow.data.myEquipment)\n    }\n  }, [yellow.data]) // eslint-disable-line\n\n  // Equipment checked out Hook\n  useEffect(() => {\n    if (red.data) {\n      setCheckedOut(red.data.myEquipment)\n    }\n  }, [red.data]) // eslint-disable-line\n\n  // React-Select options\n  // Will move to a config file\n  const categoryOptions = [\n    {\n      value: 'Dumbbell',\n      label: 'Dumbbell'\n    },\n    {\n      value: 'Kettlebell',\n      label: 'Kettlebell'\n    }\n  ]\n\n  const weightOptions = [\n    {\n      value: 5,\n      label: '5'\n    },\n    {\n      value: 10,\n      label: '10'\n    },\n    {\n      value: 15,\n      label: '15'\n    },\n    {\n      value: 20,\n      label: '20'\n    },\n    {\n      value: 25,\n      label: '25'\n    },\n    {\n      value: 30,\n      label: '30'\n    },\n    {\n      value: 35,\n      label: '35'\n    },\n    {\n      value: 40,\n      label: '40'\n    },\n    {\n      value: 45,\n      label: '45'\n    },\n    {\n      value: 50,\n      label: '50'\n    },\n    {\n      value: 55,\n      label: '55'\n    },\n    {\n      value: 60,\n      label: '60'\n    },\n    {\n      value: 65,\n      label: '65'\n    },\n    {\n      value: 70,\n      label: '70'\n    },\n    {\n      value: 75,\n      label: '75'\n    },\n    {\n      value: 80,\n      label: '80'\n    },\n    {\n      value: 85,\n      label: '85'\n    },\n    {\n      value: 90,\n      label: '90'\n    },\n    {\n      value: 95,\n      label: '95'\n    },\n    {\n      value: 100,\n      label: '100'\n    },\n  ]\n\n  if (green.loading || yellow.loading || red.loading) {\n    return <div>loading...</div>\n  } else if (green.error || yellow.error || red.error) {\n    return <div>Error retrieving Marketplace data</div>\n  }\n\n  return(\n    <div>\n      <h1 className=\"view-header\">My Equipment</h1>\n\n      <div className=\"rows\">\n        <AvailableTable label=\"Available\" equipment={available}/>\n        <ActiveTable \n          primaryLabel=\"On Hold\"\n          secondaryLabel=\"Requested By\"\n          equipment={onHold}\n          primaryFunction={holdRemove}\n          secondaryFunction={takeOut}\n          primaryButtonLabel=\"Remove Hold\"\n          secondaryButtonLabel=\"Check Out\"\n        />\n        <ActiveTable \n          primaryLabel=\"Checked Out\"\n          secondaryLabel=\"Borrower\"\n          equipment={checkedOut}\n          primaryFunction={takeIn}\n          primaryButtonLabel=\"Check In\"\n        />\n      </div>\n\n      {/* Will add form validation after and add CSS styles, specifically the margin to get rid of the br elements*/}\n      <div className=\"view-header\">\n        <form onSubmit={newEquipment}>\n          <div>\n            Category:\n            <Select\n              onChange={setCategory}\n              options={categoryOptions}\n              className='input-add-equip'\n            />\n          </div>\n          <div>\n            Weight:\n            <Select\n              onChange={setWeight}\n              options={weightOptions}\n              className='input-add-equip'\n            />\n          </div>\n          <button type='submit' className='add-equip-button'>Add Equipment</button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default Equipment","import React from 'react'\n\nconst TableData = ({ transactions, columnLabel }) => {\n  \n  return (\n    <div className=\"card\">\n      <table>\n        <tbody>\n          <tr>\n            <th>\n              Category\n            </th>\n            <th>\n              Weight\n            </th>\n            <th>\n              Checkout\n            </th>\n            <th>\n              Checkin\n            </th>\n            <th>\n              {columnLabel}\n              </th>\n            <th>\n              Number\n            </th>\n          </tr>\n          {transactions.map(e =>\n            <tr key={e.id}>\n              <td>{e.category}</td>\n              <td>{e.weight}</td>\n              <td>{e.check_out_timestamp}</td>\n              <td>{e.check_in_timestamp}</td>\n              <td>{e.name}</td>\n              <td>{e.number}</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default TableData","import React, { useState, useEffect }from 'react'\nimport { useQuery } from '@apollo/client'\nimport { MY_BORROWING_HISTORY } from '../queries'\nimport TableHistory from './TableHistory'\nimport Input from './Input'\n\nconst BorrowingHistory = () => {\n\n  // Application State\n  const [transactions, setTransactions] = useState([])\n  const [weightQuery, setWeightQuery] = useState('')\n  const [categoryQuery, setCategoryQuery] = useState('')\n  const [lenderQuery, setLenderQuery] = useState('')\n  // const [selectedEquipment, setSelectedEquipment] = useState(null)\n\n  // Defining the useQuery Hooks\n  const ledger = useQuery(MY_BORROWING_HISTORY)\n\n  // Transactions useEffect Hook\n  useEffect(() => {\n    if (ledger.data) {\n      setTransactions(ledger.data.myBorrowingHistory)\n    }\n  }, [ledger.data]) // eslint-disable-line\n\n  // // Render filtered results of transactions array\n  // const queryFilter = async () => {\n  //   // Filter transactions by weight\n  //   async function weightFilter(arrayToFilter) {\n  //     const weightFilteredTransactions = arrayToFilter.filter(t => t.weight.toUpperCase() === weightQuery.toUpperCase())\n\n  //     return weightFilteredTransactions\n  //   }\n\n  //   // Filter transactions by category\n  //   async function categoryFilter(arrayToFilter) {\n  //     const categoryFilteredTransactions = arrayToFilter.filter(t => t.category.toUpperCase() === categoryQuery.toUpperCase())\n\n  //     return categoryFilteredTransactions\n  //   }\n\n  //   // Filter transactions by lender\n  //   async function lenderFilter(arrayToFilter) {\n  //     const lenderFilteredTransactions = arrayToFilter.filter(t => t.name.toUpperCase() === lenderQuery.toUpperCase())\n\n  //     return lenderFilteredTransactions\n  //   }\n\n  //   if(weightQuery || categoryQuery || lenderQuery){\n  //     return weightFilter(await categoryFilter(await lenderFilter(transactions)))\n  //   } else\n  //     return transactions\n  // }\n\n  // Controlled Component Functions\n  const handleWeightQuery = (event) => {\n    console.log(event.target.value)\n    setWeightQuery(event.target.value)\n  }\n\n  const handleCategoryQuery = (event) => {\n    console.log(event.target.value)\n    setCategoryQuery(event.target.value)\n  }\n\n  const handleLenderQuery = (event) => {\n    console.log(event.target.value)\n    setLenderQuery(event.target.value)\n  }\n\n  if (ledger.loading) {\n    return <div>loading...</div>\n  } else if (ledger.error) {\n    return <div>Error retrieving Borrowing History data</div>\n  } else if (!ledger.data.myBorrowingHistory.length) {\n    return <div className=\"view-header\"><h1>You have not borrowed any equipment yet</h1></div>\n  }\n\n  // Creating a set of all the unique weight values\n  const weightSet = new Set()\n  ledger.data.myBorrowingHistory.map(t => weightSet.add(t.weight))\n  const uniqueWeights = [...weightSet]\n\n  // Event handler for all weights\n  const filterWeight = (weight) => {\n    const shortLedger = ledger.data.myBorrowingHistory.filter(t => t.weight === weight)\n\n    setTransactions(shortLedger)\n  }\n\n  // Creating a set of all the unique equipment category values\n  const categorySet = new Set()\n  ledger.data.myBorrowingHistory.map(t => categorySet.add(t.category))\n  const uniqueCategories = [...categorySet]\n\n  // Event handler for all categories\n  const filterCategory = (category) => {\n    const shortLedger = ledger.data.myBorrowingHistory.filter(t => t.category === category)\n\n    setTransactions(shortLedger)\n  }\n\n  // Creating a set of all the unique lenders\n  const lenderSet = new Set()\n  ledger.data.myBorrowingHistory.map(t => lenderSet.add(t.name))\n  const uniqueLenders = [...lenderSet]\n\n  // Event handler for all categories\n  const filterLender = (lender) => {\n    const shortLedger = ledger.data.myBorrowingHistory.filter(t => t.name === lender)\n\n    setTransactions(shortLedger)\n  }\n\n  // Respective reset event handler\n  const reset = () => {\n    setTransactions(ledger.data.myBorrowingHistory)\n  }\n\n  return (\n    <div>\n      <h1 className=\"view-header\">\n        My Borrowing History\n      </h1>\n      <h3 className=\"view-header\">\n        Breakdown of Your Borrowing:\n      </h3>\n\n      {/* <Input\n        label=\"Filter by Weight\"\n        newInfo={weightQuery}\n        handleInfoChange={handleWeightQuery}\n      />\n      <Input\n        label=\"Filter by Category\"\n        newInfo={categoryQuery}\n        handleInfoChange={handleCategoryQuery}\n      />\n      <Input\n        label=\"Filter by Lender Name\"\n        newInfo={lenderQuery}\n        handleInfoChange={handleLenderQuery}\n      />\n      <button\n        onClick={() => console.log('button clicked')}\n      />\n      <br/> */}\n      <div className=\"view-header\">\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                Weights:\n              </td>\n              <td>\n                {uniqueWeights.map(weight =>\n                  <button key={weight} className='filter-button' type='button' onClick={() => filterWeight(weight)}>{weight} lb</button>\n                )}\n              </td>\n            </tr>\n            <tr>\n              <td>\n                Categories:\n              </td>\n              <td>\n                {uniqueCategories.map(category =>\n                  <button key={category} className='filter-button' type='button' onClick={() => filterCategory(category)}>{category}</button>\n                )}\n              </td>\n            </tr>\n            <tr>\n              <td>\n                Lenders:\n              </td>\n              <td>\n                {uniqueLenders.map(lender =>\n                  <button key={lender} className='filter-button' type='button' onClick={() => filterLender(lender)}>{lender}</button>\n                )}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <button type='button' onClick={() => reset()}>Reset Filters</button>\n      </div>\n\n      <br/>\n      <br/>\n      <br/>\n\n      <h2 className=\"view-header\">\n        Ledger of Transactions\n      </h2>\n      <div className=\"rows\">\n        <TableHistory transactions={transactions} columnLabel=\"Lender\" />\n      </div>\n    </div>\n  )\n}\n\nexport default BorrowingHistory","import React, { useState, useEffect }from 'react'\nimport { useQuery } from '@apollo/client'\nimport { MY_LENDING_HISTORY } from '../queries'\nimport TableHistory from './TableHistory'\n\nconst LendingHistory = () => {\n\n  // Application State\n  const [transactions, setTransactions] = useState([])\n\n  // Defining the useQuery Hooks\n  const ledger = useQuery(MY_LENDING_HISTORY)\n\n  // Transactions useEffect Hook\n  useEffect(() => {\n    if (ledger.data) {\n      setTransactions(ledger.data.myLendingHistory)\n    }\n  }, [ledger.data]) // eslint-disable-line\n\n  if (ledger.loading) {\n    return <div>loading...</div>\n  } else if (ledger.error) {\n    return <div>Error retrieving Lending History data</div>\n  } else if (!ledger.data.myLendingHistory.length) {\n    return <div className=\"view-header\"><h1>You have not lent out any equipment yet</h1></div>\n  }\n\n  return (\n    <div>\n      <h1 className=\"view-header\">\n        My Lending History\n      </h1>\n      <div className=\"rows\">\n        <TableHistory transactions={transactions} columnLabel=\"Borrower\" />\n      </div>\n    </div>\n  )\n}\n\nexport default LendingHistory","import React, { useState, useEffect } from 'react'\nimport { useQuery } from '@apollo/client'\nimport { MY_ACCOUNT } from '../queries'\n\nconst Profile = () => {\n\n  // Application State\n  const [info, setInfo] = useState([])\n\n  // Defining the useQuery Hooks\n  const account = useQuery(MY_ACCOUNT)\n\n  // Available Equipment Hook\n  useEffect(() => {\n    if (account.data) {\n      setInfo(account.data.myAccount[0])\n    }\n  }, [account.data]) // eslint-disable-line\n\n\n  if (account.loading) {\n    return <div>loading...</div>\n  } else if (account.error) {\n    return <div>Error retrieving Dashboard data</div>\n  }\n\n  return(\n    <div>\n      <h1 className=\"view-header\">Dashboard</h1>\n        <div className=\"rows\">\n          <div className=\"card\">\n            <h2 style={{\"text-decoration\": \"underline\"}}>Account Info:</h2>\n\n            <p><b>Name:</b> {info.name}</p>\n            <p><b>Number:</b> {info.number}</p>\n            <p><b>Email:</b> {info.email}</p>\n            <p><b>House:</b> {info.house}</p>\n            <p><b>Street:</b> {info.street}</p>\n            <p><b>City:</b> {info.city}</p>\n            \n          </div>\n          <div className=\"card\">\n            <h2 style={{\"text-decoration\": \"underline\"}}>Stats For Me:</h2>\n\n            <p><b>Name:</b> {info.name}</p>\n            <p><b>Number:</b> {info.number}</p>\n            <p><b>Email:</b> {info.email}</p>\n            <p><b>House:</b> {info.house}</p>\n            <p><b>Street:</b> {info.street}</p>\n            <p><b>City:</b> {info.city}</p>\n            \n          </div>\n        </div>\n        <div className=\"rows\">\n          <div className=\"card\">\n          <h2 style={{ \"text-decoration\": \"underline\" }}>Equipment I Have Requested On Hold:</h2>\n\n            <p><b>Name:</b> {info.name}</p>\n            <p><b>Number:</b> {info.number}</p>\n            <p><b>Email:</b> {info.email}</p>\n            <p><b>House:</b> {info.house}</p>\n            <p><b>Street:</b> {info.street}</p>\n            <p><b>City:</b> {info.city}</p>\n            \n          </div>\n          <div className=\"card\">\n            <h2 style={{\"text-decoration\": \"underline\"}}>Equipment I Am Currently Borrowing:</h2>\n\n            <p><b>Name:</b> {info.name}</p>\n            <p><b>Number:</b> {info.number}</p>\n            <p><b>Email:</b> {info.email}</p>\n            <p><b>House:</b> {info.house}</p>\n            <p><b>Street:</b> {info.street}</p>\n            <p><b>City:</b> {info.city}</p>\n            \n          </div>\n        </div>\n        \n\n    </div>\n    \n\n    \n  )\n}\n\nexport default Profile","import React, { useState } from 'react'\n// Importing React-Router\nimport {\n  // BrowserRouter as Router,\n  HashRouter,\n  Switch,\n  Route,\n  NavLink\n} from \"react-router-dom\"\n\nimport Marketplace from './components/Marketplace'\nimport Equipment from './components/Equipment'\nimport BorrowingHistory from './components/BorrowingHistory'\nimport LendingHistory from './components/LendingHistory'\nimport Profile from './components/Profile'\nimport './App.css'\n\n// Defining constants\nconst profilePictureURL = 'https://cdn2.bulbagarden.net/upload/7/75/VSBrock_Masters.png'\nconst userName = 'Brock'\n\nfunction App() {\n\n  return (\n    <div>\n\n      <HashRouter>\n        <div className=\"sidebar-desktop\">\n          <div className=\"sidebar\">\n            <NavLink to=\"/\">\n              <h1 className=\"logo mobile-only\">GYM SHARE</h1>\n              <div className=\"welcome desktop-only\">\n                <img src={profilePictureURL} alt=\"Profile Picture\" className=\"avatar\" />\n                Welcome {userName}!\n              </div>\n            </NavLink>\n\n\n            <NavLink \n              to=\"/marketplace\" \n              className=\"link nav-select\" \n              activeStyle={{\n                fontWeight: \"bold\",\n                color: \"white\"\n              }}\n            >\n              <i className=\"fas fa-store icon-spacing\" />\n              Marketplace\n            </NavLink>\n\n            <NavLink \n              to=\"/equipment\" \n              className=\"link nav-select\" \n              activeStyle={{\n                fontWeight: \"bold\",\n                color: \"white\"\n              }}\n            >\n              <i class=\"fas fa-dumbbell icon-spacing\" />\n              Equipment\n            </NavLink>\n\n            <NavLink \n              to=\"/borrowingHistory\" \n              className=\"link nav-select\" \n              activeStyle={{\n                fontWeight: \"bold\",\n                color: \"white\"\n              }}\n            >\n              <i class=\"fas fa-hand-holding-medical icon-spacing\" />\n              Borrowing History\n            </NavLink>\n\n            <NavLink \n              to=\"/lendingHistory\" \n              className=\"link nav-select\" \n              activeStyle={{\n                fontWeight: \"bold\",\n                color: \"white\"\n              }}\n            >\n              <i class=\"fas fa-handshake icon-spacing\" />\n              Lending History\n            </NavLink>\n\n\n            {/* Disabled logout button for demo purposes */}\n            {/* <button className=\"logout-button\" disabled><i class=\"fas fa-sign-out-alt icon-spacing\"/>Logout</button> */}\n          </div>\n        </div>\n\n        <div className=\"sidebar-mobile\">\n          <div className=\"sidebar\">\n            <NavLink to=\"/\" className=\"footer\">\n                <img src={profilePictureURL} alt=\"Profile Picture\" className=\"avatar\" />\n                <h5>Dashboard</h5>\n            </NavLink>\n\n            <NavLink \n              to=\"/marketplace\" \n              className=\"footer\"\n              activeStyle={{\n                fontWeight: \"bold\",\n                color: \"white\"\n              }}\n            >\n              <i className=\"fas fa-store fa-2x\" />\n              <h5>Marketplace</h5>\n            </NavLink>\n\n            \n            <NavLink \n              to=\"/equipment\" \n              className=\"footer\"\n              activeStyle={{\n                fontWeight: \"bold\",\n                color: \"white\"\n              }}\n            >\n              <i className=\"fas fa-dumbbell fa-2x icon-mobile\" />\n              <div className=\"caption\">\n                <h5>Equipment</h5>\n              </div>\n            </NavLink>\n           \n\n            <NavLink \n              to=\"/borrowingHistory\" \n              className=\"footer\"\n              activeStyle={{\n                fontWeight: \"bold\",\n                color: \"white\"\n              }}\n            >\n              <i class=\"fas fa-hand-holding-medical fa-2x\" />\n              <h5>Borrowing History</h5>\n            </NavLink>\n\n            <NavLink \n              to=\"/lendingHistory\" \n              className=\"footer\"\n              activeStyle={{\n                fontWeight: \"bold\",\n                color: \"white\"\n              }}\n            >\n              <i class=\"fas fa-handshake fa-2x\" />\n              <h5>Lending History</h5>\n            </NavLink>\n\n\n            {/* Disabled logout button for demo purposes */}\n            {/* <button className=\"logout-button\" disabled><i class=\"fas fa-sign-out-alt icon-spacing\"/>Logout</button> */}\n          </div>\n        </div>\n\n        \n\n\n        <div className=\"main\">\n          <Switch>\n            <Route exact={true} path=\"/\">\n              <Profile />\n            </Route>\n            <Route exact={true} path=\"/marketplace\">\n              <Marketplace />\n            </Route>\n            <Route exact={true} path=\"/equipment\">\n              <Equipment />\n            </Route>\n            <Route exact={true} path=\"/borrowingHistory\">\n              <BorrowingHistory />\n            </Route>\n            <Route exact={true} path=\"/lendingHistory\">\n              <LendingHistory />\n            </Route>\n          </Switch>\n        </div>\n        \n      </HashRouter>\n        {/* <button onClick={() => setPage('marketPlace')}>Marketplace</button>\n        <button onClick={() => setPage('equipment')}>My Equipment</button>\n        <button onClick={() => setPage('borrowingHistory')}>Borrowing History</button>\n        <button onClick={() => setPage('lendingHistory')}>Lending History</button>\n        <button onClick={() => setPage('profile')}>Profile</button>\n        <button onClick={() => setPage()}>Log Out</button> */}\n      \n      \n      {/* <div className=\"topbar\">\n        <header>\n          Gym Share\n        </header>\n      </div>\n\n      <div className=\"main\">\n        <Marketplace\n          show={page === 'marketPlace'}\n        />\n\n        <Equipment\n          show={page === 'equipment'}\n        />\n\n        <BorrowingHistory\n          show={page === 'borrowingHistory'}\n        />\n\n        <LendingHistory\n          show={page === 'lendingHistory'}\n        />\n\n        <Profile\n          show={page === 'profile'}\n        />\n      </div> */}\n      \n\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles.css'\nimport App from './App'\n\nimport { ApolloClient, HttpLink, InMemoryCache, ApolloProvider } from '@apollo/client'\n\nfunction determineNodeEnivironment() {\n  if (process.env.NODE_ENV === \"development\") return 'http://localhost:3006/graphql'\n  return 'https://gym-share.herokuapp.com/graphql'\n}\n\nconst apiURI = determineNodeEnivironment()\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    uri: apiURI\n  })\n})\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}